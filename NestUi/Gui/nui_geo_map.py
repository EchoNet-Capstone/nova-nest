import os
import json
from PySide6.QtWidgets import QVBoxLayout, QWidget
from PySide6.QtWebEngineWidgets import QWebEngineView
from PySide6.QtWebChannel import QWebChannel
from PySide6.QtCore import QObject, Signal
from ..Utils.nest_map import *

class MapBridge(QObject):
    # Signal for right-click with latitude and longitude
    mapRightClicked = Signal(float, float)
    # Signal for marker click with latitude, longitude, and popup text
    markerClicked = Signal(float, float, str)

class NestGeoMapWidget(QWidget):
    def __init__(self, parent):
        super().__init__(parent)
        self.init_ui()

    def init_ui(self):
        layout = QVBoxLayout()

        # Create QWebEngineView
        self.web_view = QWebEngineView()

        # Set up the communication bridge
        self.channel = QWebChannel()
        self.bridge = MapBridge()
        self.channel.registerObject("qtChannel", self.bridge)
        self.web_view.page().setWebChannel(self.channel)

        # Load the map HTML generated by our Python functions.
        map_html = get_html_map()
        self.web_view.setHtml(map_html)

        # Connect signals to slots.
        self.bridge.markerClicked.connect(self.on_marker_click)

        layout.addWidget(self.web_view)
        self.setLayout(layout)

    def on_marker_click(self, lat, lng):
        print(f"Marker clicked at: Latitude {lat}, Longitude {lng}")

def get_html_map():
    """
    Generate the HTML for the map by:
      1. Fetching EarthRanger events as a GeoDataFrame.
      2. Creating a folium map using setup_map().
      3. Adding event markers via add_events_to_map().
      4. Returning the HTML representation of the map.
    """
    # Fetch EarthRanger events.
    gdf = get_earthranger_data()

    # Create the base map.
    folium_map = setup_map()
    # Add EarthRanger events to the map.
    add_events_to_map(folium_map, gdf)

    # Get the HTML representation of the map.
    map_html = folium_map._repr_html_()

    # Optionally, save the HTML to file for debugging.
    file_name = "map.html"
    with open(file_name, "w", encoding="utf-8") as file:
        file.write(map_html)
    print(f"Map HTML saved to {os.path.abspath(file_name)}")
    
    return map_html